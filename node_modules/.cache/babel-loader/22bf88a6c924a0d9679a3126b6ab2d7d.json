{"ast":null,"code":"import _objectSpread from \"/Users/akshay_lr/React-Projects/todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport dummyData from \"../dummy/data\";\nconst ADD_TODO = \"ADD_TODO\";\nconst EDIT_TODO = \"EDIT_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst MARK_DONE = \"MARK_DONE\";\nconst RE_OPEN = \"RE_OPEN\";\nconst initialState = dummyData;\nexport const addTodo = data => {\n  return {\n    type: ADD_TODO,\n    payload: data\n  };\n};\nexport const markDone = id => {\n  return {\n    type: MARK_DONE,\n    payload: id\n  };\n};\nexport const reOpenTodo = id => {\n  return {\n    type: RE_OPEN,\n    payload: id\n  };\n};\nexport const deleteTodo = id => {\n  return {\n    type: DELETE_TODO,\n    payload: id\n  };\n};\n\nconst TodoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [action.payload, ...state];\n\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n\n    case RE_OPEN:\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return _objectSpread({}, todo, {\n            currentState: false\n          });\n        }\n\n        return todo;\n      });\n\n    case MARK_DONE:\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return _objectSpread({}, todo, {\n            currentState: true\n          });\n        }\n\n        return todo;\n      });\n\n    case EDIT_TODO:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default TodoReducer;","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/store/todo.js"],"names":["dummyData","ADD_TODO","EDIT_TODO","DELETE_TODO","MARK_DONE","RE_OPEN","initialState","addTodo","data","type","payload","markDone","id","reOpenTodo","deleteTodo","TodoReducer","state","action","filter","todo","map","currentState"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,eAAtB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,YAAY,GAAGN,SAArB;AAEA,OAAO,MAAMO,OAAO,GAAGC,IAAI,IAAI;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAER,QADD;AAELS,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAGC,EAAE,IAAI;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAEL,SADD;AAELM,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,UAAU,GAAGD,EAAE,IAAI;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAEJ,OADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAGF,EAAE,IAAI;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAEN,WADD;AAELO,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;;AAOP,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKR,QAAL;AACE,aAAO,CAACgB,MAAM,CAACP,OAAR,EAAiB,GAAGM,KAApB,CAAP;;AAEF,SAAKb,WAAL;AACE,aAAOa,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACP,OAAxC,CAAP;;AAEF,SAAKL,OAAL;AACE,aAAOW,KAAK,CAACI,GAAN,CAAUD,IAAI,IAAI;AACvB,YAAIA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACP,OAAvB,EAAgC;AAC9B,mCAAYS,IAAZ;AAAkBE,YAAAA,YAAY,EAAE;AAAhC;AACD;;AACD,eAAOF,IAAP;AACD,OALM,CAAP;;AAMF,SAAKf,SAAL;AACE,aAAOY,KAAK,CAACI,GAAN,CAAUD,IAAI,IAAI;AACvB,YAAIA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACP,OAAvB,EAAgC;AAC9B,mCAAYS,IAAZ;AAAkBE,YAAAA,YAAY,EAAE;AAAhC;AACD;;AACD,eAAOF,IAAP;AACD,OALM,CAAP;;AAMF,SAAKjB,SAAL;AACE,aAAOc,KAAP;;AAEF;AACE,aAAOA,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["import dummyData from \"../dummy/data\";\n\nconst ADD_TODO = \"ADD_TODO\";\nconst EDIT_TODO = \"EDIT_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst MARK_DONE = \"MARK_DONE\";\nconst RE_OPEN = \"RE_OPEN\";\n\nconst initialState = dummyData;\n\nexport const addTodo = data => {\n  return {\n    type: ADD_TODO,\n    payload: data\n  };\n};\n\nexport const markDone = id => {\n  return {\n    type: MARK_DONE,\n    payload: id\n  };\n};\n\nexport const reOpenTodo = id => {\n  return {\n    type: RE_OPEN,\n    payload: id\n  };\n};\n\nexport const deleteTodo = id => {\n  return {\n    type: DELETE_TODO,\n    payload: id\n  };\n};\n\nconst TodoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [action.payload, ...state];\n\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n\n    case RE_OPEN:\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo, currentState: false };\n        }\n        return todo;\n      });\n    case MARK_DONE:\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo, currentState: true };\n        }\n        return todo;\n      });\n    case EDIT_TODO:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default TodoReducer;\n"]},"metadata":{},"sourceType":"module"}