{"ast":null,"code":"import _slicedToArray from \"/Users/akshay_lr/React-Projects/todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/EditForm.js\";\nimport React, { useState } from \"react\";\n\nconst EditForm = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        description = _useState4[0],\n        setDescription = _useState4[1];\n\n  const _useRadioButtons = useRadioButtons(\"platform\"),\n        _useRadioButtons2 = _slicedToArray(_useRadioButtons, 2),\n        platformValue = _useRadioButtons2[0],\n        plaftormInputProps = _useRadioButtons2[1];\n\n  function useRadioButtons(name) {\n    const _useState5 = useState(null),\n          _useState6 = _slicedToArray(_useState5, 2),\n          value = _useState6[0],\n          setState = _useState6[1];\n\n    const handleChange = e => {\n      setState(e.target.value);\n    };\n\n    const inputProps = {\n      name,\n      type: \"radio\",\n      onChange: handleChange\n    };\n    return [value, inputProps];\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Title:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Description:\", React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"10\",\n    cols: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" \", \"/>\"), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Windows\", React.createElement(\"input\", Object.assign({\n    value: \"windows\",\n    checked: platformValue === \"windows\"\n  }, plaftormInputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), \"Mac\", React.createElement(\"input\", Object.assign({\n    value: \"mac\",\n    checked: platformValue === \"mac\"\n  }, plaftormInputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), \"Linux\", React.createElement(\"input\", Object.assign({\n    value: \"linux\",\n    checked: platformValue === \"linux\"\n  }, plaftormInputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n};\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/EditForm.js"],"names":["React","useState","EditForm","title","setTitle","description","setDescription","useRadioButtons","platformValue","plaftormInputProps","name","value","setState","handleChange","e","target","inputProps","type","onChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACKD,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdE,KADc;AAAA,QACPC,QADO;;AAAA,qBAEiBH,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,QAEdI,WAFc;AAAA,QAEDC,cAFC;;AAAA,2BAGuBC,eAAe,CAAC,UAAD,CAHtC;AAAA;AAAA,QAGdC,aAHc;AAAA,QAGCC,kBAHD;;AAKrB,WAASF,eAAT,CAAyBG,IAAzB,EAA+B;AAAA,uBACHT,QAAQ,CAAC,IAAD,CADL;AAAA;AAAA,UACtBU,KADsB;AAAA,UACfC,QADe;;AAG7B,UAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBF,MAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,KAFD;;AAIA,UAAMK,UAAU,GAAG;AACjBN,MAAAA,IADiB;AAEjBO,MAAAA,IAAI,EAAE,OAFW;AAGjBC,MAAAA,QAAQ,EAAEL;AAHO,KAAnB;AAMA,WAAO,CAACF,KAAD,EAAQK,UAAR,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEb,KAFT;AAGE,IAAA,QAAQ,EAAEW,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASJ,KAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,IAAA,KAAK,EAAEN,WADT;AAEE,IAAA,QAAQ,EAAES,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASJ,KAAV,CAF/B;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOe,GAPf,OATF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEH,aAAa,KAAK;AAF7B,KAGMC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,SAQE;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,OAAO,EAAED,aAAa,KAAK;AAF7B,KAGMC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,WAcE;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAED,aAAa,KAAK;AAF7B,KAGMC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdF,CApBF,CADF,CADF;AA6CD,CAlED;;AAoEA,eAAeP,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst EditForm = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [platformValue, plaftormInputProps] = useRadioButtons(\"platform\");\n\n  function useRadioButtons(name) {\n    const [value, setState] = useState(null);\n\n    const handleChange = e => {\n      setState(e.target.value);\n    };\n\n    const inputProps = {\n      name,\n      type: \"radio\",\n      onChange: handleChange\n    };\n\n    return [value, inputProps];\n  }\n\n  return (\n    <div>\n      <form>\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </label>\n        <label>\n          Description:\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            rows=\"10\"\n            cols=\"30\"\n          ></textarea>{\" \"}\n          />\n        </label>\n\n        <fieldset>\n          Windows\n          <input\n            value=\"windows\"\n            checked={platformValue === \"windows\"}\n            {...plaftormInputProps}\n          />\n          Mac\n          <input\n            value=\"mac\"\n            checked={platformValue === \"mac\"}\n            {...plaftormInputProps}\n          />\n          Linux\n          <input\n            value=\"linux\"\n            checked={platformValue === \"linux\"}\n            {...plaftormInputProps}\n          />\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default EditForm;\n"]},"metadata":{},"sourceType":"module"}