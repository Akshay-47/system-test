{"ast":null,"code":"var _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport { compareValues } from \"../utils\";\n\nconst TableRow = ({\n  todos,\n  filterBy,\n  handleTableRowClick,\n  sort\n}) => {\n  const showAll = filterBy.showAll,\n        showPending = filterBy.showPending,\n        showCompleted = filterBy.showCompleted;\n  console.log(todos);\n\n  const getFilteredList = todos => {\n    if (showAll) return todos;else if (showPending) return todos.filter(todo => todo.currentState === false);else if (showCompleted) return todos.filter(todo => todo.currentState === true);\n  };\n\n  if (sort.sortBy !== null) {}\n\n  const filteredTodos = getFilteredList(todos);\n  return filteredTodos.map((todo, index) => React.createElement(\"tr\", {\n    key: index,\n    onClick: e => handleTableRowClick(e, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, todo.title), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, todo.priority), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, todo.createdAt), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, todo.dueDate), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, actions(todo.currentState))));\n};\n\nconst actions = currentState => {\n  if (currentState) return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Re-Open\",\n    class_: \"re-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Edit\",\n    class_: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Delete\",\n    class_: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Done\",\n    class_: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nfunction hasNull(target) {\n  for (let member in target) {\n    if (target[member] !== null) return member;\n  }\n\n  return;\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sort: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js"],"names":["React","connect","Button","compareValues","TableRow","todos","filterBy","handleTableRowClick","sort","showAll","showPending","showCompleted","console","log","getFilteredList","filter","todo","currentState","sortBy","filteredTodos","map","index","e","id","title","priority","createdAt","dueDate","actions","hasNull","target","member","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\nimport { compareValues } from \"../utils\";\n\nconst TableRow = ({ todos, filterBy, handleTableRowClick, sort }) => {\n  const { showAll, showPending, showCompleted } = filterBy;\n  console.log(todos);\n  const getFilteredList = todos => {\n    if (showAll) return todos;\n    else if (showPending)\n      return todos.filter(todo => todo.currentState === false);\n    else if (showCompleted)\n      return todos.filter(todo => todo.currentState === true);\n  };\n\n  if (sort.sortBy !== null) {\n  }\n\n  const filteredTodos = getFilteredList(todos);\n\n  return filteredTodos.map((todo, index) => (\n    <tr key={index} onClick={e => handleTableRowClick(e, todo.id)}>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.title}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.priority}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.createdAt}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.dueDate}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {actions(todo.currentState)}\n      </td>\n    </tr>\n  ));\n};\n\nconst actions = currentState => {\n  if (currentState)\n    return (\n      <div className=\"todo-item action\">\n        <Button name={\"Re-Open\"} class_=\"re-open\" />\n      </div>\n    );\n  return (\n    <div className=\"todo-item action\">\n      <Button name=\"Edit\" class_=\"edit\" />\n      <Button name=\"Delete\" class_=\"delete\" />\n      <Button name=\"Done\" class_=\"done\" />\n    </div>\n  );\n};\n\nfunction hasNull(target) {\n  for (let member in target) {\n    if (target[member] !== null) return member;\n  }\n  return;\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sort: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}