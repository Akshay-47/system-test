{"ast":null,"code":"var _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport { sortBySummary } from \"../store/sort\";\n\nconst TableRow = ({\n  todos,\n  filterBy,\n  handleTableRowClick,\n  sortBy,\n  sortBySummary\n}) => {\n  const showAll = filterBy.showAll,\n        showPending = filterBy.showPending,\n        showCompleted = filterBy.showCompleted;\n\n  const getFilteredList = todos => {\n    if (showAll) return todos;else if (showPending) return todos.filter(todo => todo.currentState === false);else if (showCompleted) return todos.filter(todo => todo.currentState === true);\n  };\n\n  const filteredTodos = getFilteredList(todos);\n  return filteredTodos.map((todo, index) => React.createElement(\"tr\", {\n    key: index,\n    onClick: e => handleTableRowClick(e, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, todo.title), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, todo.priority), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, todo.createdAt), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, todo.dueDate), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, actions(todo.currentState))));\n};\n\nconst actions = currentState => {\n  if (currentState) return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Re-Open\",\n    class_: \"re-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Edit\",\n    class_: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Delete\",\n    class_: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Done\",\n    class_: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sortBy: state.sort\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sortBySummary: () => dispatch(sortBySummary())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js"],"names":["React","connect","Button","sortBySummary","TableRow","todos","filterBy","handleTableRowClick","sortBy","showAll","showPending","showCompleted","getFilteredList","filter","todo","currentState","filteredTodos","map","index","e","id","title","priority","createdAt","dueDate","actions","mapStateToProps","state","sort","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\nimport { sortBySummary } from \"../store/sort\";\n\nconst TableRow = ({\n  todos,\n  filterBy,\n  handleTableRowClick,\n  sortBy,\n  sortBySummary\n}) => {\n  const { showAll, showPending, showCompleted } = filterBy;\n\n  const getFilteredList = todos => {\n    if (showAll) return todos;\n    else if (showPending)\n      return todos.filter(todo => todo.currentState === false);\n    else if (showCompleted)\n      return todos.filter(todo => todo.currentState === true);\n  };\n\n  const filteredTodos = getFilteredList(todos);\n\n  return filteredTodos.map((todo, index) => (\n    <tr key={index} onClick={e => handleTableRowClick(e, todo.id)}>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.title}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.priority}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.createdAt}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.dueDate}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {actions(todo.currentState)}\n      </td>\n    </tr>\n  ));\n};\n\nconst actions = currentState => {\n  if (currentState)\n    return (\n      <div className=\"todo-item action\">\n        <Button name={\"Re-Open\"} class_=\"re-open\" />\n      </div>\n    );\n  return (\n    <div className=\"todo-item action\">\n      <Button name=\"Edit\" class_=\"edit\" />\n      <Button name=\"Delete\" class_=\"delete\" />\n      <Button name=\"Done\" class_=\"done\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sortBy: state.sort\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sortBySummary: () => dispatch(sortBySummary())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}