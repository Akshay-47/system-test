{"ast":null,"code":"var _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Button\";\n\nconst TableRow = ({\n  todos,\n  filterBy,\n  handleTableRowClick,\n  sortBy\n}) => {\n  const showAll = filterBy.showAll,\n        showPending = filterBy.showPending,\n        showCompleted = filterBy.showCompleted;\n  const sortBySummary = sortBy.sortBySummary,\n        sortByPriority = sortBy.sortByPriority,\n        sortByCreatedOn = sortBy.sortByCreatedOn,\n        sortByDueDate = sortBy.sortByDueDate,\n        sortByAction = sortBy.sortByAction;\n\n  const getFilteredList = todos => {\n    if (showAll) return todos;else if (showPending) return todos.filter(todo => todo.currentState === false);else if (showCompleted) return todos.filter(todo => todo.currentState === true);\n  };\n\n  const filteredTodos = getFilteredList(todos);\n  return filteredTodos.map((todo, index) => React.createElement(\"tr\", {\n    key: index,\n    onClick: e => handleTableRowClick(e, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, todo.title), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, todo.priority), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, todo.createdAt), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, todo.dueDate), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, actions(todo.currentState))));\n};\n\nconst actions = currentState => {\n  if (currentState) return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Re-Open\",\n    class_: \"re-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Edit\",\n    class_: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Delete\",\n    class_: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Done\",\n    class_: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nfunction hasNull(target) {\n  for (var member in target) {\n    if (target[member] == null) return true;\n  }\n\n  return false;\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sortBy: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js"],"names":["React","connect","Button","TableRow","todos","filterBy","handleTableRowClick","sortBy","showAll","showPending","showCompleted","sortBySummary","sortByPriority","sortByCreatedOn","sortByDueDate","sortByAction","getFilteredList","filter","todo","currentState","filteredTodos","map","index","e","id","title","priority","createdAt","dueDate","actions","hasNull","target","member","mapStateToProps","state","sort"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\n\nconst TableRow = ({ todos, filterBy, handleTableRowClick, sortBy }) => {\n  const { showAll, showPending, showCompleted } = filterBy;\n\n  const {\n    sortBySummary,\n    sortByPriority,\n    sortByCreatedOn,\n    sortByDueDate,\n    sortByAction\n  } = sortBy;\n\n  const getFilteredList = todos => {\n    if (showAll) return todos;\n    else if (showPending)\n      return todos.filter(todo => todo.currentState === false);\n    else if (showCompleted)\n      return todos.filter(todo => todo.currentState === true);\n  };\n\n  const filteredTodos = getFilteredList(todos);\n\n  return filteredTodos.map((todo, index) => (\n    <tr key={index} onClick={e => handleTableRowClick(e, todo.id)}>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.title}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.priority}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.createdAt}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.dueDate}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {actions(todo.currentState)}\n      </td>\n    </tr>\n  ));\n};\n\nconst actions = currentState => {\n  if (currentState)\n    return (\n      <div className=\"todo-item action\">\n        <Button name={\"Re-Open\"} class_=\"re-open\" />\n      </div>\n    );\n  return (\n    <div className=\"todo-item action\">\n      <Button name=\"Edit\" class_=\"edit\" />\n      <Button name=\"Delete\" class_=\"delete\" />\n      <Button name=\"Done\" class_=\"done\" />\n    </div>\n  );\n};\n\nfunction hasNull(target) {\n  for (var member in target) {\n    if (target[member] == null) return true;\n  }\n  return false;\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sortBy: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}