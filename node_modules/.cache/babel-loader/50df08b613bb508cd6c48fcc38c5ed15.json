{"ast":null,"code":"import _slicedToArray from \"/Users/akshay_lr/React-Projects/todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/Form.js\";\nimport React, { useState } from \"react\";\n\nconst Form = ({\n  type,\n  handleSubmit,\n  handleCancel\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        titleError = _useState4[0],\n        setTitleError = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        description = _useState6[0],\n        setDescription = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        descriptionError = _useState8[0],\n        setDescriptionError = _useState8[1];\n\n  const _useState9 = useState(\"false\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedOption = _useState10[0],\n        setSelectedOption = _useState10[1];\n\n  const _useState11 = useState(\"none\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        priority = _useState12[0],\n        setPriority = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        dueDate = _useState14[0],\n        setDueDate = _useState14[1];\n\n  const handleOptionChange = ev => {\n    console.log(ev.target.value);\n    setSelectedOption(ev.target.value);\n  };\n\n  let defaultFormType = 0; // ADD Form\n\n  if (type === \"edit\") {\n    defaultFormType = 1;\n  }\n\n  const actions = () => React.createElement(React.Fragment, null, React.createElement(Button, {\n    name: \"Save\",\n    class: \"submit\",\n    type: \"submit\",\n    onClick: e => handleSubmit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Cancel\",\n    class: \"cancel\",\n    onClick: () => handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n\n  const validateTitle = () => {\n    if (title.length < 10) setTitleError(\"Enter at least 10 characters\");else if (title.length > 500) setTitleError(\"Max Length Exceeded\");else setTitleError(\"\");\n  };\n\n  const validateDescription = () => {\n    if (description.length < 10) setDescriptionError(\"Enter at least 10 characters\");else if (description.length > 500) setDescriptionError(\"Max Length Exceeded\");else setDescriptionError(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Title:\")), React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    id: \"title\",\n    onBlur: validateTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, titleError)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" Description:\")), React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    rows: \"10\",\n    cols: \"30\",\n    id: \"description\",\n    onBlur: validateDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, descriptionError)), React.createElement(\"div\", {\n    className: \"current-state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Current State:\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"true\",\n    checked: selectedOption === \"true\",\n    onChange: e => handleOptionChange(e),\n    id: \"closed_task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"closed_task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Closed\"))), React.createElement(\"p\", {\n    className: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"false\",\n    checked: selectedOption === \"false\",\n    onChange: e => handleOptionChange(e),\n    id: \"open_task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"open_task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Open\"))))), defaultFormType === 1 && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Created At:\")), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Some Date\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"due_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Due Date:\")), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"due date\",\n    id: \"due_date\",\n    value: dueDate,\n    onChange: event => setDueDate(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), defaultFormType === 1 && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"priority\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Priority\")), React.createElement(\"select\", {\n    id: \"priority\",\n    value: priority,\n    name: \"priority\",\n    onChange: e => setPriority(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"low\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Low\"), React.createElement(\"option\", {\n    value: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Medium\"), React.createElement(\"option\", {\n    value: \"high\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"High\"), React.createElement(\"option\", {\n    value: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"None\"))), actions));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/Form.js"],"names":["React","useState","Form","type","handleSubmit","handleCancel","title","setTitle","titleError","setTitleError","description","setDescription","descriptionError","setDescriptionError","selectedOption","setSelectedOption","priority","setPriority","dueDate","setDueDate","handleOptionChange","ev","console","log","target","value","defaultFormType","actions","e","validateTitle","length","validateDescription","event"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Form = ({ type, handleSubmit, handleCancel }) => {\n  const [title, setTitle] = useState(\"\");\n  const [titleError, setTitleError] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(\"false\");\n  const [priority, setPriority] = useState(\"none\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const handleOptionChange = ev => {\n    console.log(ev.target.value);\n    setSelectedOption(ev.target.value);\n  };\n  let defaultFormType = 0; // ADD Form\n  if (type === \"edit\") {\n    defaultFormType = 1;\n  }\n\n  const actions = () => (\n    <>\n      <Button\n        name=\"Save\"\n        class=\"submit\"\n        type=\"submit\"\n        onClick={e => handleSubmit()}\n      />\n      <Button name=\"Cancel\" class=\"cancel\" onClick={() => handleCancel} />\n    </>\n  );\n\n  const validateTitle = () => {\n    if (title.length < 10) setTitleError(\"Enter at least 10 characters\");\n    else if (title.length > 500) setTitleError(\"Max Length Exceeded\");\n    else setTitleError(\"\");\n  };\n\n  const validateDescription = () => {\n    if (description.length < 10)\n      setDescriptionError(\"Enter at least 10 characters\");\n    else if (description.length > 500)\n      setDescriptionError(\"Max Length Exceeded\");\n    else setDescriptionError(\"\");\n  };\n\n  return (\n    <div>\n      <form>\n        <p>\n          <label htmlFor=\"title\">\n            <span> Title:</span>\n          </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            id=\"title\"\n            onBlur={validateTitle}\n          />\n          <span className=\"error\">{titleError}</span>\n        </p>\n        <p>\n          <label htmlFor=\"description\">\n            <span> Description:</span>\n          </label>\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            rows=\"10\"\n            cols=\"30\"\n            id=\"description\"\n            onBlur={validateDescription}\n          ></textarea>\n          <span className=\"error\">{descriptionError}</span>\n        </p>\n        <div className=\"current-state\">\n          <label>\n            <span>Current State:</span>\n          </label>\n          <fieldset>\n            <p className=\"radio\">\n              <input\n                type=\"radio\"\n                value=\"true\"\n                checked={selectedOption === \"true\"}\n                onChange={e => handleOptionChange(e)}\n                id=\"closed_task\"\n              />\n              <label htmlFor=\"closed_task\">\n                <span>Closed</span>\n              </label>\n            </p>\n            <p className=\"radio\">\n              <input\n                type=\"radio\"\n                value=\"false\"\n                checked={selectedOption === \"false\"}\n                onChange={e => handleOptionChange(e)}\n                id=\"open_task\"\n              />\n              <label htmlFor=\"open_task\">\n                <span>Open</span>\n              </label>\n            </p>\n          </fieldset>\n        </div>\n        {defaultFormType === 1 && (\n          <p>\n            <label>\n              <span>Created At:</span>\n            </label>\n            <span>Some Date</span>\n          </p>\n        )}\n        <p>\n          <label htmlFor=\"due_date\">\n            <span>Due Date:</span>\n          </label>\n          <input\n            type=\"date\"\n            name=\"due date\"\n            id=\"due_date\"\n            value={dueDate}\n            onChange={event => setDueDate(event.target.value)}\n          />\n        </p>\n        {defaultFormType === 1 && (\n          <p>\n            <label htmlFor=\"priority\">\n              <span>Priority</span>\n            </label>\n            <select\n              id=\"priority\"\n              value={priority}\n              name=\"priority\"\n              onChange={e => setPriority(e.target.value)}\n            >\n              <option value=\"low\">Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"high\">High</option>\n              <option value=\"none\">None</option>\n            </select>\n          </p>\n        )}\n        {actions}\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}