{"ast":null,"code":"import _slicedToArray from \"/Users/akshay_lr/React-Projects/todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/TableList.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport EditForm from \"./Form\";\nimport Modal from \"./Modal\";\n\nconst handleDelete = () => {\n  console.log(\"Delete\");\n};\n\nconst handleOnReOpen = () => {\n  console.log(\"handleOnReOpen\");\n};\n\nconst handleDone = () => {\n  console.log(\"handleDone\");\n};\n\nconst TableList = ({\n  todos\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        editModalIsOpen = _useState2[0],\n        setEditModalIsOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        deleteModalIsOpen = _useState4[0],\n        setDeleteModalIsOpen = _useState4[1];\n\n  const handleEdit = () => {\n    setEditModalIsOpen(true);\n  };\n\n  const onEditDismiss = () => {\n    setEditModalIsOpen(false);\n  };\n\n  const handleTableRowClick = (e, postId) => {\n    e.persist();\n    e.stopPropagation();\n\n    if (e.target.matches(\".delete\")) {\n      handleDelete(postId);\n    } else if (e.target.matches(\".done\")) {\n      handleDone(postId);\n    } else if (e.target.matches(\".edit\")) {\n      handleEdit(postId);\n    } else if (e.target.matches(\".re-open\")) {\n      handleOnReOpen();\n    } else {\n      console.log(\"Modal desc to be opened\"); // openDescriptionModal()\n    }\n  };\n\n  const renderTableRow = todos => {\n    return todos.map((todo, index) => React.createElement(\"tr\", {\n      key: index,\n      onClick: e => handleTableRowClick(e, todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, todo.title), React.createElement(\"td\", {\n      className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, todo.priority), React.createElement(\"td\", {\n      className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, todo.createdAt), React.createElement(\"td\", {\n      className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, todo.dueDate), React.createElement(\"td\", {\n      className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, actions(todo.currentState))));\n  };\n\n  const actions = currentState => {\n    if (currentState) return React.createElement(\"div\", {\n      className: \"todo-item action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      name: \"Re-Open\",\n      class_: \"re-open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"todo-item action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      name: \"Edit\",\n      class_: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      name: \"Delete\",\n      class_: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      name: \"Done\",\n      class_: \"done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, renderTableRow(todos)), React.createElement(Modal, {\n    show: editModalIsOpen,\n    onDismiss: onEditDismiss,\n    title: \"Edit\",\n    content: React.createElement(EditForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }),\n    actions: React.createElement(Button, {\n      name: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapStateToProps)(TableList);","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/TableList.js"],"names":["React","useState","connect","Button","EditForm","Modal","handleDelete","console","log","handleOnReOpen","handleDone","TableList","todos","editModalIsOpen","setEditModalIsOpen","deleteModalIsOpen","setDeleteModalIsOpen","handleEdit","onEditDismiss","handleTableRowClick","e","postId","persist","stopPropagation","target","matches","renderTableRow","map","todo","index","id","currentState","title","priority","createdAt","dueDate","actions","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\nimport EditForm from \"./Form\";\nimport Modal from \"./Modal\";\n\nconst handleDelete = () => {\n  console.log(\"Delete\");\n};\n\nconst handleOnReOpen = () => {\n  console.log(\"handleOnReOpen\");\n};\n\nconst handleDone = () => {\n  console.log(\"handleDone\");\n};\n\nconst TableList = ({ todos }) => {\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\n\n  const handleEdit = () => {\n    setEditModalIsOpen(true);\n  };\n\n  const onEditDismiss = () => {\n    setEditModalIsOpen(false);\n  };\n\n  const handleTableRowClick = (e, postId) => {\n    e.persist();\n    e.stopPropagation();\n    if (e.target.matches(\".delete\")) {\n      handleDelete(postId);\n    } else if (e.target.matches(\".done\")) {\n      handleDone(postId);\n    } else if (e.target.matches(\".edit\")) {\n      handleEdit(postId);\n    } else if (e.target.matches(\".re-open\")) {\n      handleOnReOpen();\n    } else {\n      console.log(\"Modal desc to be opened\");\n      // openDescriptionModal()\n    }\n  };\n\n  const renderTableRow = todos => {\n    return todos.map((todo, index) => (\n      <tr key={index} onClick={e => handleTableRowClick(e, todo.id)}>\n        <td\n          className={\n            \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n          }\n        >\n          {todo.title}\n        </td>\n        <td\n          className={\n            \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n          }\n        >\n          {todo.priority}\n        </td>\n        <td\n          className={\n            \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n          }\n        >\n          {todo.createdAt}\n        </td>\n        <td\n          className={\n            \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n          }\n        >\n          {todo.dueDate}\n        </td>\n        <td\n          className={\n            \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n          }\n        >\n          {actions(todo.currentState)}\n        </td>\n      </tr>\n    ));\n  };\n\n  const actions = currentState => {\n    if (currentState)\n      return (\n        <div className=\"todo-item action\">\n          <Button name={\"Re-Open\"} class_=\"re-open\" />\n        </div>\n      );\n    return (\n      <div className=\"todo-item action\">\n        <Button name=\"Edit\" class_=\"edit\" />\n        <Button name=\"Delete\" class_=\"delete\" />\n        <Button name=\"Done\" class_=\"done\" />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <tbody>{renderTableRow(todos)}</tbody>\n      <Modal\n        show={editModalIsOpen}\n        onDismiss={onEditDismiss}\n        title=\"Edit\"\n        content={<EditForm />}\n        actions={<Button name=\"Save\" />}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapStateToProps)(TableList);\n"]},"metadata":{},"sourceType":"module"}