{"ast":null,"code":"var _jsxFileName = \"/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Button\";\nimport { compareValues, getFilteredList, prioritySort, timeSortCreatedOn, timeSortDueDate } from \"../utils\";\n\nconst TableRow = ({\n  todos,\n  filterBy,\n  handleTableRowClick,\n  sort\n}) => {\n  let filteredTodos = getFilteredList(todos, filterBy);\n\n  if (sort.sortBy === \"title\") {\n    let order = sort.type ? \"asc\" : \"desc\";\n    const newTodos = filteredTodos.sort(compareValues(\"title\", order));\n    filteredTodos = newTodos;\n  }\n\n  if (sort.sortBy === \"priority\") {\n    const newTodos = filteredTodos.sort(prioritySort);\n    if (sort.type) filteredTodos = newTodos;else filteredTodos = newTodos.reverse();\n  }\n\n  if (sort.sortBy === \"created_on\") {\n    const newTodos = filteredTodos.sort(timeSortCreatedOn);\n    if (sort.type) filteredTodos = newTodos;else filteredTodos = newTodos.reverse();\n  }\n\n  if (sort.sortBy === \"due_date\") {\n    const newTodos = filteredTodos.sort(timeSortDueDate);\n    if (sort.type) filteredTodos = newTodos;else filteredTodos = newTodos.reverse();\n  }\n\n  return filteredTodos.map((todo, index) => React.createElement(\"tr\", {\n    key: index,\n    onClick: e => handleTableRowClick(e, todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, todo.title), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, todo.priority), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, todo.createdAt), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, todo.dueDate), React.createElement(\"td\", {\n    className: \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, actions(todo.currentState))));\n};\n\nconst actions = currentState => {\n  if (currentState) return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Re-Open\",\n    class_: \"re-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"todo-item action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Edit\",\n    class_: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Delete\",\n    class_: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Done\",\n    class_: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sort: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);","map":{"version":3,"sources":["/Users/akshay_lr/React-Projects/todo-application/src/components/TableRow.js"],"names":["React","connect","Button","compareValues","getFilteredList","prioritySort","timeSortCreatedOn","timeSortDueDate","TableRow","todos","filterBy","handleTableRowClick","sort","filteredTodos","sortBy","order","type","newTodos","reverse","map","todo","index","e","id","currentState","title","priority","createdAt","dueDate","actions","mapStateToProps","state","filter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\nimport {\n  compareValues,\n  getFilteredList,\n  prioritySort,\n  timeSortCreatedOn,\n  timeSortDueDate\n} from \"../utils\";\n\nconst TableRow = ({ todos, filterBy, handleTableRowClick, sort }) => {\n  let filteredTodos = getFilteredList(todos, filterBy);\n\n  if (sort.sortBy === \"title\") {\n    let order = sort.type ? \"asc\" : \"desc\";\n    const newTodos = filteredTodos.sort(compareValues(\"title\", order));\n    filteredTodos = newTodos;\n  }\n\n  if (sort.sortBy === \"priority\") {\n    const newTodos = filteredTodos.sort(prioritySort);\n    if (sort.type) filteredTodos = newTodos;\n    else filteredTodos = newTodos.reverse();\n  }\n\n  if (sort.sortBy === \"created_on\") {\n    const newTodos = filteredTodos.sort(timeSortCreatedOn);\n    if (sort.type) filteredTodos = newTodos;\n    else filteredTodos = newTodos.reverse();\n  }\n\n  if (sort.sortBy === \"due_date\") {\n    const newTodos = filteredTodos.sort(timeSortDueDate);\n    if (sort.type) filteredTodos = newTodos;\n    else filteredTodos = newTodos.reverse();\n  }\n\n  return filteredTodos.map((todo, index) => (\n    <tr key={index} onClick={e => handleTableRowClick(e, todo.id)}>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.title}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.priority}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.createdAt}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {todo.dueDate}\n      </td>\n      <td\n        className={\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\n        }\n      >\n        {actions(todo.currentState)}\n      </td>\n    </tr>\n  ));\n};\n\nconst actions = currentState => {\n  if (currentState)\n    return (\n      <div className=\"todo-item action\">\n        <Button name={\"Re-Open\"} class_=\"re-open\" />\n      </div>\n    );\n  return (\n    <div className=\"todo-item action\">\n      <Button name=\"Edit\" class_=\"edit\" />\n      <Button name=\"Delete\" class_=\"delete\" />\n      <Button name=\"Done\" class_=\"done\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    filterBy: state.filter,\n    sort: state.sort\n  };\n};\n\nexport default connect(mapStateToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}